delimiters "$", "$"

query(serviceType, searchstrings, boundingboxes, start="1", max="5") ::= <<
<?xml version="1.0" encoding="ISO-8859-1" standalone="no"?>
<csw:GetRecords startPosition="$start$" maxRecords="$max$" xmlns:csw="http://www.opengis.net/cat/csw/2.0.2" xmlns:rim="urn:oasis:names:tc:ebxml-regrep:xsd:rim:3.0" xmlns:ogc="http://www.opengis.net/ogc" xmlns:gml="http://www.opengis.net/gml" service="CSW" version="2.0.2" resultType="results" outputFormat="application/xml" outputSchema="http://www.opengis.net/cat/csw/2.0.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.opengis.net/cat/csw/2.0.2 http://schemas.opengis.net/csw/2.0.2/CSW-discovery.xsd">
    <csw:Query typeNames="csw:Record rim:Classification">
        <csw:ElementSetName typeNames='csw:Record'>full</csw:ElementSetName>
        <csw:Constraint version="1.1.0">
            <ogc:Filter>
                <ogc:And>
                    $searchstrings:propertyislike()$
                    <ogc:PropertyIsEqualTo>
                        <ogc:PropertyName>rim:Classification/@classificationNode</ogc:PropertyName>
                        <ogc:Literal>$serviceType$</ogc:Literal>
                    </ogc:PropertyIsEqualTo>
                    $boundingboxes:boundingbox()$
                </ogc:And>
            </ogc:Filter>
        </csw:Constraint>
    </csw:Query>
</csw:GetRecords>
>>

propertyislike(p) ::= <<
<ogc:PropertyIsLike wildCard="%" singleChar="_" escapeChar="\">
    <ogc:PropertyName>AnyText</ogc:PropertyName>
    <ogc:Literal>$p$</ogc:Literal>
</ogc:PropertyIsLike>
>>

boundingbox(bb) ::= <<
<ogc:Contains>
    <ogc:PropertyName>ows:BoundingBox</ogc:PropertyName>
    <gml:Envelope>
        <gml:lowerCorner>$bb.lowerCorner$</gml:lowerCorner>
        <gml:upperCorner>$bb.upperCorner$</gml:upperCorner>
    </gml:Envelope>
</ogc:Contains>
>>